// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesWatchlist.Data;

#nullable disable

namespace MoviesWatchlist.Data.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20230808105139_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7614191-1c4e-4188-a708-25a1038b236a"),
                            FirstName = "Hugo",
                            ImageURL = "https://en.wikipedia.org/wiki/Hugo_Weaving#/media/File:MJK_08925_Hugo_Weaving_(Berlinale_2018)_bw43.jpg",
                            LastName = "Weaving",
                            Nationality = "British"
                        },
                        new
                        {
                            Id = new Guid("41a8fa16-0c31-43bb-9c55-bcb581dc844a"),
                            FirstName = "Shia",
                            ImageURL = "https://en.wikipedia.org/wiki/Shia_LaBeouf#/media/File:Shia_LaBeouf_2022.jpg",
                            LastName = "LaBeouf",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("15dd8482-e5b9-4a76-b5c3-74fa8c8a3550"),
                            FirstName = "Megan",
                            ImageURL = "https://en.wikipedia.org/wiki/Megan_Fox#/media/File:Machine_Gun_Kelly_and_Megan_Fox_(51914406561)_(cropped2).jpg",
                            LastName = "Fox",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("c1ba6031-8a0e-4552-a41b-a027ca58d028"),
                            FirstName = "Tyrese",
                            ImageURL = "https://en.wikipedia.org/wiki/Tyrese_Gibson#/media/File:TyreseGibsonDec08.jpg",
                            LastName = "Gibson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("db10b49c-234d-4ec7-9605-15113fc60a7c"),
                            FirstName = "Joshua",
                            ImageURL = "https://en.wikipedia.org/wiki/Josh_Duhamel#/media/File:Josh_Duhamel_SXSW_2017_(cropped).jpg",
                            LastName = "Duhamel",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("2b2a06a6-de9f-48ab-b0e3-a9257fbf430e"),
                            FirstName = "John",
                            ImageURL = "https://en.wikipedia.org/wiki/John_Turturro#/media/File:John_Turturro_2017.jpg",
                            LastName = "Turturro",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("bbd43335-ff35-488a-b07a-0cfd429c456c"),
                            FirstName = "Mark",
                            ImageURL = "https://en.wikipedia.org/wiki/Mark_Wahlberg#/media/File:Mark_Wahlberg_2021.jpg",
                            LastName = "Wahlberg",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("11e73643-1c5a-4060-8448-d7b8bf501aad"),
                            FirstName = "Stanley",
                            ImageURL = "https://en.wikipedia.org/wiki/Stanley_Tucci#/media/File:Stanley_Tucci_2017_Berlinale.jpg",
                            LastName = "Tucci",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("b0bf16e6-8236-49b6-812d-82c72b86c03a"),
                            FirstName = "Anthony",
                            ImageURL = "https://en.wikipedia.org/wiki/Anthony_Hopkins#/media/File:AnthonyHopkins10TIFF.jpg",
                            LastName = "Hopkins",
                            Nationality = "Welsh"
                        },
                        new
                        {
                            Id = new Guid("68a328d8-b219-4da8-beec-ed29bf9c0c1d"),
                            FirstName = "Hailee",
                            ImageURL = "https://en.wikipedia.org/wiki/Hailee_Steinfeld#/media/File:Hailee_Steinfeld_by_Gage_Skidmore.jpg",
                            LastName = "Steinfeld",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("2774c1be-c671-4d4b-98c0-418d2c029b5e"),
                            FirstName = "John",
                            ImageURL = "https://en.wikipedia.org/wiki/John_Cena#/media/File:John_Cena_July_2018.jpg",
                            LastName = "Cena",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("686abbba-4b69-426b-81dc-393a0a8ea3f8"),
                            FirstName = "John",
                            ImageURL = "https://en.wikipedia.org/wiki/John_Ortiz#/media/File:John_Ortiz_2019.jpg",
                            LastName = "Ortiz",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("de041239-3e88-4cfd-a840-b8c1ffb83e4c"),
                            FirstName = "Anthony",
                            ImageURL = "https://en.wikipedia.org/wiki/Anthony_Ramos#/media/File:Anthony_Ramos_(cropped).jpg",
                            LastName = "Ramos",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("6bd0dc16-af95-47dc-80c4-7e40b22cb7d3"),
                            FirstName = "Dominique",
                            ImageURL = "https://en.wikipedia.org/wiki/Dominique_Fishback#/media/File:TIFF_2018_Dominique_Fishback_(1_of_1)-2.jpg",
                            LastName = "Fishback",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("a5db8241-9f16-4e50-9fbb-e54b7afee878"),
                            FirstName = "Robert",
                            ImageURL = "https://en.wikipedia.org/wiki/Robert_Downey_Jr.#/media/File:Robert_Downey_Jr_2014_Comic_Con_(cropped).jpg",
                            LastName = "Downey Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("19f5a00d-8362-4d8a-9cb6-c45af591c564"),
                            FirstName = "Terrence",
                            ImageURL = "https://en.wikipedia.org/wiki/Terrence_Howard#/media/File:Terrence_Howard.jpg",
                            LastName = "Howard",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("52ffb7a3-eb8d-4ad2-901a-4f81ef2e233b"),
                            FirstName = "Gwyneth",
                            ImageURL = "https://en.wikipedia.org/wiki/Gwyneth_Paltrow#/media/File:GwynethPaltrowByAndreaRaffin2011.jpg",
                            LastName = "Paltrow",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("8d4d5fd3-c2ba-4b58-9184-95ef67571d2a"),
                            FirstName = "Scarlett",
                            ImageURL = "https://en.wikipedia.org/wiki/Scarlett_Johansson#/media/File:Scarlett_Johansson_by_Gage_Skidmore_2_(cropped,_2).jpg",
                            LastName = "Johansson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("d8217b07-28a8-4ecb-b7f1-5209a2147aab"),
                            FirstName = "Samuel",
                            ImageURL = "https://en.wikipedia.org/wiki/Samuel_L._Jackson",
                            LastName = "Jackson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("65b0a01f-d609-4d38-88f2-82910940344c"),
                            FirstName = "Tom",
                            ImageURL = "https://en.wikipedia.org/wiki/Tom_Holland#/media/File:Tom_Holland_by_Gage_Skidmore.jpg",
                            LastName = "Holland",
                            Nationality = "English"
                        },
                        new
                        {
                            Id = new Guid("d4d0f99b-d71b-4578-bccc-b156014b4ee1"),
                            FirstName = "Michael",
                            ImageURL = "https://en.wikipedia.org/wiki/Michael_Keaton#/media/File:Michael_Keaton_(NYCC_2014)_(cropped).JPG",
                            LastName = "Keaton",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("2796f2df-a7bd-4202-8145-9f5a9239bf71"),
                            FirstName = "Zendaya",
                            ImageURL = "https://en.wikipedia.org/wiki/Zendaya#/media/File:Zendaya_-_2019_by_Glenn_Francis.jpg",
                            LastName = "Coleman",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("ea28c665-a5d0-4407-a190-07509313c616"),
                            FirstName = "Jacob",
                            ImageURL = "https://en.wikipedia.org/wiki/Jacob_Batalon#/media/File:Jacob_Batalon_(28035642754)_(cropped).jpg",
                            LastName = "Batalon",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e916c4a-68b5-44a8-827a-6663edc2acb9"),
                            FirstName = "Michael",
                            ImageURL = "https://en.wikipedia.org/wiki/Michael_Bay_filmography#/media/File:Michael.bay.png",
                            LastName = "Bay",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("8c001b75-77c1-40bf-ac38-13f805ff3656"),
                            FirstName = "Travis",
                            ImageURL = "https://en.wikipedia.org/wiki/Travis_Knight#/media/File:Travis_Knight_(30000495292).jpg",
                            LastName = "Knight",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("2b93c574-532c-43d1-b0fe-58b78ec6fefe"),
                            FirstName = "Steven",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Caple Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("18fb4cdd-ebae-4e5a-9bbe-f0799ff2d0a6"),
                            FirstName = "Jonathan",
                            ImageURL = "https://en.wikipedia.org/wiki/Jon_Favreau#/media/File:Jon_Favreau_2016.jpeg",
                            LastName = "Favreau",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("9e30050f-1a89-475f-97f5-23d2c370e6c4"),
                            FirstName = "Jonathan",
                            ImageURL = "https://en.wikipedia.org/wiki/Jon_Watts#/media/File:Jon_Watts_by_Gage_Skidmore_2.jpg",
                            LastName = "Watts",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99ca4a8c-4e23-4b24-bcf0-1fcbd5d5eef1"),
                            ImageURL = "https://img.freepik.com/free-photo/dictatorship-oppression-collage-concept_23-2149711441.jpg?w=996&t=st=1690645532~exp=1690646132~hmac=8e2d8c552cc98f1c2997af989980015a2b12a42fc5a7a84d167908aeda7c1f4d",
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("d85f391a-d6e7-4edb-af71-552427ceec8f"),
                            ImageURL = "https://img.freepik.com/free-photo/people-s-emotions-cinema_155003-15059.jpg?w=996&t=st=1690644907~exp=1690645507~hmac=50e982108c2b8eadb7aa524e605a844fc8e1e19a9bfefbceb26495a39c41a4df",
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("4094003e-31ff-4f20-952d-91d9c13b41cb"),
                            ImageURL = "https://img.freepik.com/free-photo/sad-lady-silk-outfit-posing-with-clapperboard-black-background-portrait-blonde-woman-red-dress-crying-isolated-backdrop_197531-29087.jpg?w=996&t=st=1690645002~exp=1690645602~hmac=10686356bde52377f1f022d27be1880fc928717d6d10146a9d82037b199a7a4f",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("efdf3761-311f-4675-b33c-463a71b8b48f"),
                            ImageURL = "https://img.freepik.com/free-photo/nighttime-nature-landscape-galaxy-mountain-water-star-beauty-generative-ai_188544-9736.jpg?w=1060&t=st=1690645132~exp=1690645732~hmac=033aa5f68de6924948adc05915d4f13d141706979dfa063f5bbd38d11c46f2a4",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("fb6c8590-ebb7-432e-a189-3e2096c034cf"),
                            ImageURL = "https://img.freepik.com/free-photo/small-skeleton-with-popcorn-tv_23-2147685634.jpg?w=996&t=st=1690645054~exp=1690645654~hmac=6445730adc22805a60813820dd00cc71499fd873cee682d3da6d3a5d19e05384",
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("155d8c42-4ddc-406c-a547-4e61c33da659"),
                            ImageURL = "https://img.freepik.com/free-photo/back-view-man-planning-hacker-attack-dark-room-man-writing-wall-with-stickers-photographs-red-threads-planning-conspiracy-hacking-concept_74855-24330.jpg?w=996&t=st=1690645169~exp=1690645769~hmac=bb30a31205ec715b8384815bcb7b2b46222b8dedb91e4d0040d7aa30fb9d967f",
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("3dcdb030-8a0e-4980-a7b5-b32c9cd5e322"),
                            ImageURL = "https://img.freepik.com/free-photo/silhouettes-wedding-couple-standing-evening-field_1304-5463.jpg?w=1060&t=st=1690645187~exp=1690645787~hmac=40a97b3583ac55b8ef09542220c23c7b1f8b0ea4c059daca4f0455702e9e6464",
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("9dd532f1-9f91-4079-9615-f8f2ada8272a"),
                            ImageURL = "https://img.freepik.com/free-photo/silhouette-scary-zombie-with-dramatic-background_9083-8119.jpg?w=996&t=st=1690645242~exp=1690645842~hmac=3386ca0baa8ae3d240c321b480c46a262886ea6b850f5bfadd42af4ef54a2bdc",
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("e88ca03e-a630-4b03-a650-cccaeb2d9354"),
                            ImageURL = "https://img.freepik.com/free-photo/truth-concept-arrangement-crime-scene_23-2149051305.jpg?w=996&t=st=1690645266~exp=1690645866~hmac=2f1dc50b5128517c9d54fb98b7826ec6e5547fe1049f8a402264ecddbaab9c8d",
                            Name = "Crime"
                        },
                        new
                        {
                            Id = new Guid("d0b57ac9-cf00-499f-b508-2a608a5f9044"),
                            ImageURL = "https://img.freepik.com/free-photo/memory-loss-dementia-alzheimer-concept-created-with-generative-ai-technology_185193-110044.jpg?w=1060&t=st=1690645384~exp=1690645984~hmac=166a934cabdbc26d34996172eb3b0c404a6ceeb9159f36f15becbf8ca3969194",
                            Name = "Psychological"
                        },
                        new
                        {
                            Id = new Guid("8067cb10-6632-43d2-a512-94aa8178863e"),
                            ImageURL = "https://img.freepik.com/free-photo/cowboy-background-with-hat_52683-87191.jpg?w=360&t=st=1690645411~exp=1690646011~hmac=e5b40854dc486b4d7c64ed41e7b3eda36131e28c6f73382e7e3834d9e08354e8",
                            Name = "Western"
                        },
                        new
                        {
                            Id = new Guid("b34e6611-8f6d-4421-8a96-74dda0d9fce3"),
                            ImageURL = "https://img.freepik.com/free-photo/cruel-war-scenes-digital-painting_456031-162.jpg?w=1380&t=st=1690645434~exp=1690646034~hmac=7f69427ebf3e600fb904d17b3bb3877d1a172ba7194cc4549977ccb61a43dcce",
                            Name = "War and military"
                        },
                        new
                        {
                            Id = new Guid("2d5f3a39-53b8-4720-bd51-b8bae354998f"),
                            ImageURL = "https://www.freepik.com/free-photo/muay-thai-thai-boxing-fighters_27883560.htm#query=fight%20film&position=9&from_view=search&track=ais",
                            Name = "Martial arts"
                        },
                        new
                        {
                            Id = new Guid("c358f1e4-6758-4dd8-96cc-1ea38d627ee9"),
                            ImageURL = "https://img.freepik.com/free-photo/painting-spaceship-being-lifted-up-by-galaxy_123827-23492.jpg?w=996&t=st=1690645621~exp=1690646221~hmac=e753bce5031804d263d083eb6d69f24ca79a53bf2de5cf5b1c0f126c13ea5790",
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("ed1f220c-f93b-4a03-bac2-4c629310cea8"),
                            ImageURL = "https://img.freepik.com/free-photo/beautiful-shot-famous-roman-colosseum-amphitheater-breathtaking-sky-sunrise_181624-6998.jpg?w=900&t=st=1690645693~exp=1690646293~hmac=fadd42117ddd0daffd2e3b564aed50209b061edd15ce59d5f25ff711523a3db8",
                            Name = "Historical"
                        },
                        new
                        {
                            Id = new Guid("d8f668b6-880a-421a-9793-1fdfd8292f04"),
                            ImageURL = "https://img.freepik.com/free-photo/doomsday-scene-catastrophe-digital-illustration_456031-51.jpg?w=1380&t=st=1690645557~exp=1690646157~hmac=d0399ce74558d886a183733b8b081a544752c4b62b9716931f35d7341fd0c0c2",
                            Name = "Supernatural"
                        },
                        new
                        {
                            Id = new Guid("5518011e-7a03-4c71-bae5-7d7db676f702"),
                            ImageURL = "https://img.freepik.com/free-photo/soccer-ball-white-line-stadium_1150-5285.jpg?w=996&t=st=1690645585~exp=1690646185~hmac=6116b95c4db3685731491d73b2eadef22128b617e906bbf22b1ef2f51b21bf2a",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("8a77cebc-c18f-4ef8-bd86-2a6ceaee2297"),
                            ImageURL = "https://img.freepik.com/free-photo/photographer-hand-holding-camera-standing-viewpoint-clouds-panorama-viewpoint-sunrise_335224-1320.jpg?w=996&t=st=1690645725~exp=1690646325~hmac=fe9c6f2d727ddfadff01addb7c94e2cccc477fed176a493c19a4c4875f079963",
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.IdentityUserMovie", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "CollectorId");

                    b.HasIndex("CollectorId");

                    b.ToTable("IdentityUsersMovies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<decimal>("Rating")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieActor", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MoviesActors");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesGenres");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieWriter", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WriterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "WriterId");

                    b.HasIndex("WriterId");

                    b.ToTable("MoviesWriters");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Writer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Writers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a89d160-c317-49bd-9f62-39e458aedc9e"),
                            FirstName = "Roberto",
                            ImageURL = "https://en.wikipedia.org/wiki/Roberto_Orci#/media/File:Roberto_Orci_by_Gage_Skidmore.jpg",
                            LastName = "Orci",
                            Nationality = "Mexican-American"
                        },
                        new
                        {
                            Id = new Guid("84f01c04-1107-4c95-adab-b521a5681870"),
                            FirstName = "Alex",
                            ImageURL = "https://en.wikipedia.org/wiki/Alex_Kurtzman#/media/File:Alex_Kurtzman_San_Diego_Comic_Con_2019.jpg",
                            LastName = "Kurtzman",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("aa5def6f-6348-4f23-bb28-b2029a8f16a9"),
                            FirstName = "John",
                            ImageURL = "https://en.wikipedia.org/wiki/John_Rogers_(writer)#/media/File:John_Rogers_(971464822)_(cropped).jpg",
                            LastName = "Rogers",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("f18c95c7-771d-4b5d-956c-8d2ad11367f0"),
                            FirstName = "Ehren",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Kruger",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("9054085e-f624-44f2-982f-14788ee31600"),
                            FirstName = "Ken",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Nolan",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fff151d2-f85b-43fd-9ec6-6e6c01057706"),
                            FirstName = "Art",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Marcum",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("eec89fad-d7bd-4fd2-bff4-1c6625e87705"),
                            FirstName = "Matt",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Holloway",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("d9b387dc-068f-44eb-aa95-a972bf1e6087"),
                            FirstName = "Christina",
                            ImageURL = "https://en.wikipedia.org/wiki/Christina_Hodson#/media/File:Christina_Hodson.jpg",
                            LastName = "Hodson",
                            Nationality = "British"
                        },
                        new
                        {
                            Id = new Guid("8cade6f7-f715-4ed6-a7f6-a1cf34f9895c"),
                            FirstName = "Mark",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Fergus",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("690dcf82-1de8-4eec-8712-a89bdfc9b03d"),
                            FirstName = "Hawk",
                            ImageURL = "https://en.wikipedia.org/wiki/Mark_Fergus_and_Hawk_Ostby#/media/File:Hawk_Ostby,_at_the_Hugo_Awards_Ceremony,_Worldcon,_Helsinki.jpg",
                            LastName = "Ostby",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("234bd740-3561-4aa4-adce-1cb6b876388d"),
                            FirstName = "Justin",
                            ImageURL = "https://en.wikipedia.org/wiki/Justin_Theroux#/media/File:Maniac_UK_premiere_(Theroux).jpg",
                            LastName = "Theroux",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("10da71f4-4a38-4778-90d3-ddae68e4f529"),
                            FirstName = "Chris",
                            ImageURL = "https://en.wikipedia.org/wiki/Chris_McKenna_(writer)#/media/File:Chris_McKenna_(14584155278).jpg",
                            LastName = "McKenna",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("782eb1b7-0ed8-443c-abc4-cc80836dc7f3"),
                            FirstName = "Erik",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Sommers",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("41043cb3-c754-4b02-8947-e87962541ef5"),
                            FirstName = "Jonathan",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Goldstein",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("ee404ee7-b730-4fa4-9250-d28d96931267"),
                            FirstName = "John",
                            ImageURL = "https://en.wikipedia.org/wiki/John_Francis_Daley#/media/File:John_Francis_Daley_in_March_2012.jpg",
                            LastName = "Daley",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("f63182b8-7214-46ba-b0b9-ac6fa6525894"),
                            FirstName = "Christopher",
                            ImageURL = "https://www.freepik.com/free-photo/user-profile-icon-front-side_41949685.htm#query=default%20avatar%20profile&position=3&from_view=search&track=ais",
                            LastName = "Ford",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("17a1390a-9640-4ed7-9bfd-8d43788714dc"),
                            FirstName = "Joby",
                            ImageURL = "https://en.wikipedia.org/wiki/Joby_Harold#/media/File:Joby_Harold_on_Sidewalks_Entertainment.jpg",
                            LastName = "Harold",
                            Nationality = "English"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.IdentityUserMovie", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", "Collector")
                        .WithMany("IdentityUsersMovies")
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("IdentityUsersMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieActor", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Actor", "Actor")
                        .WithMany("MoviesActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieGenre", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Genre", "Genre")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieWriter", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesWriters")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Writer", "Writer")
                        .WithMany("MoviesWriters")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Actor", b =>
                {
                    b.Navigation("MoviesActors");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.AppUser", b =>
                {
                    b.Navigation("IdentityUsersMovies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Genre", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.Navigation("IdentityUsersMovies");

                    b.Navigation("MoviesActors");

                    b.Navigation("MoviesGenres");

                    b.Navigation("MoviesWriters");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Writer", b =>
                {
                    b.Navigation("MoviesWriters");
                });
#pragma warning restore 612, 618
        }
    }
}
