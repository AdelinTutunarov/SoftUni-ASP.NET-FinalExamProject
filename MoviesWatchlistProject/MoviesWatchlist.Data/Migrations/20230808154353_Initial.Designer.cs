// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesWatchlist.Data;

#nullable disable

namespace MoviesWatchlist.Data.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20230808154353_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a1ca8fa-f8b6-4d79-a330-3ce66f9a1ea5"),
                            FirstName = "Hugo",
                            ImageURL = "https://content.api.news/v3/images/bin/7a755d9f3876f67a85751897275918ac?width=2048",
                            LastName = "Weaving",
                            Nationality = "British"
                        },
                        new
                        {
                            Id = new Guid("0f168ecd-c99a-4b5c-9574-78ff69aaa4ba"),
                            FirstName = "Shia",
                            ImageURL = "https://variety.com/wp-content/uploads/2022/08/GettyImages-1185815950-e1661558394757.jpg",
                            LastName = "LaBeouf",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("184ae901-e3cd-4708-b1de-8b448bfd9d70"),
                            FirstName = "Megan",
                            ImageURL = "https://hips.hearstapps.com/hmg-prod/images/gettyimages-843456920.jpg?crop=1xw:0.75xh",
                            LastName = "Fox",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("f45428e7-bfd8-4504-9cf3-d7ee28012e7c"),
                            FirstName = "Tyrese",
                            ImageURL = "https://img.buzzfeed.com/buzzfeed-static/complex/images/rfkcideekykilq6nxfdy/morbius-tyrese-gibson-interview.jpg",
                            LastName = "Gibson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("df0a9927-953d-457c-8295-969f779fe630"),
                            FirstName = "Joshua",
                            ImageURL = "https://pagesix.com/wp-content/uploads/sites/3/2018/12/josh-duhamel.jpg?quality=75&strip=all",
                            LastName = "Duhamel",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("eac6bd2a-43e9-4cb8-9ade-f0b37d7d271f"),
                            FirstName = "John",
                            ImageURL = "https://www.goldderby.com/wp-content/uploads/2019/02/John-Turturro-movies-Ranked.jpg?w=620&h=360&crop=1",
                            LastName = "Turturro",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("13e39dc0-d4a7-49fc-b6fd-c8aac1eb9f11"),
                            FirstName = "Mark",
                            ImageURL = "https://s.yimg.com/ny/api/res/1.2/Dv95XwJFZgODyyUkNF1j6A--/YXBwaWQ9aGlnaGxhbmRlcjt3PTY0MDtoPTQ4MA--/https://media.zenfs.com/en/people_218/5ace08f208b3ced146f0aefe54f840e8",
                            LastName = "Wahlberg",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("37edbcb7-5c86-4cd7-8df4-59b5f56fcf2b"),
                            FirstName = "Stanley",
                            ImageURL = "https://media.vanityfair.com/photos/6228f56c8e2d9f0117a49745/master/w_2560%2Cc_limit/1342262316",
                            LastName = "Tucci",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("f127f714-3d21-4ad1-a7e0-8c821677b7b3"),
                            FirstName = "Anthony",
                            ImageURL = "https://static01.nyt.com/images/2021/04/26/arts/26hopkins-oscars/merlin_186923745_91056fad-2aae-40f0-8552-d90324beedee-articleLarge.jpg?quality=75&auto=webp&disable=upscale",
                            LastName = "Hopkins",
                            Nationality = "Welsh"
                        },
                        new
                        {
                            Id = new Guid("2fab0047-2b3b-420d-82d0-4384be4ab156"),
                            FirstName = "Hailee",
                            ImageURL = "https://m.media-amazon.com/images/M/MV5BZjNiZWZiMjYtNGI3Yy00NzdhLTk5YjEtZTQ2NGMzZmNlYTYxXkEyXkFqcGdeQWZlZGVyaWdh._V1_QL75_UX500_CR0,0,500,281_.jpg",
                            LastName = "Steinfeld",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("cd8d2739-e131-4b60-b063-e53052a89764"),
                            FirstName = "John",
                            ImageURL = "https://supersport-cms-prod.azureedge.net/media/vblpbdgz/john-cena-looks-on-c-wwe.jpg?width=2048&quality=100",
                            LastName = "Cena",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("6c6650f4-1be0-4cda-88cb-cfb1bb5d4b71"),
                            FirstName = "John",
                            ImageURL = "https://deadline.com/wp-content/uploads/2017/02/john-ortiz-2.jpg?w=630&h=383&crop=1",
                            LastName = "Ortiz",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("33fdff36-42d1-4c75-9af0-aadf003757f3"),
                            FirstName = "Anthony",
                            ImageURL = "https://deadline.com/wp-content/uploads/2022/02/MEGA423535_079-e1644426414259.jpg",
                            LastName = "Ramos",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("c96bdd38-32d3-4fd8-babc-bb5ec0d29d24"),
                            FirstName = "Dominique",
                            ImageURL = "https://variety.com/wp-content/uploads/2022/03/Dominique-Fishbeck.jpg?w=1000",
                            LastName = "Fishback",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fdbdb6bf-cc14-43df-845b-9f2033cf0dde"),
                            FirstName = "Robert",
                            ImageURL = "https://people.com/thmb/TOOe_Ku31nqQx3va8hZa2EXAiU0=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc():focal(708x354:710x356)/Robert-Downey-Oppenheimer-071523-02-56152238e5064f8c954f688eb0b77cdc.jpg",
                            LastName = "Downey Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("a16f41c8-aa3d-49cb-a1e1-e0d58622638b"),
                            FirstName = "Terrence",
                            ImageURL = "https://www.cheatsheet.com/wp-content/uploads/2021/03/Terrence-Howard.jpg",
                            LastName = "Howard",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("5291bc15-e662-4be8-8585-b50b163e985b"),
                            FirstName = "Gwyneth",
                            ImageURL = "https://cdn.britannica.com/56/172456-050-F518B29E/Gwyneth-Paltrow-2013.jpg?w=400&h=300&c=crop",
                            LastName = "Paltrow",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("47dc4de9-09e6-4af1-8604-d40ab37f63ec"),
                            FirstName = "Scarlett",
                            ImageURL = "https://nypost.com/wp-content/uploads/sites/2/2023/04/NYPICHPDPICT000007934275.jpg?quality=75&strip=all",
                            LastName = "Johansson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("5c8577a9-3316-4c3f-a895-3f8f82afa83f"),
                            FirstName = "Samuel",
                            ImageURL = "https://hips.hearstapps.com/hmg-prod/images/gettyimages-648731684.jpg",
                            LastName = "Jackson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("efbff803-1ca3-472d-9061-66e21a5ad414"),
                            FirstName = "Tom",
                            ImageURL = "https://e3.365dm.com/22/08/1600x900/skynews-tom-holland-spider-man_5865167.jpg?20220815095025",
                            LastName = "Holland",
                            Nationality = "English"
                        },
                        new
                        {
                            Id = new Guid("f0f3157d-c77f-4878-8e55-909f934b7620"),
                            FirstName = "Michael",
                            ImageURL = "https://www.pittsburghmagazine.com/content/uploads/2022/09/j/t/keaton.jpg",
                            LastName = "Keaton",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("0e52373c-d184-4fa2-9272-40b951e08515"),
                            FirstName = "Zendaya",
                            ImageURL = "https://static.standard.co.uk/s3fs-public/thumbnails/image/2020/01/13/15/zendaya-130120-09.jpg?width=1200&height=900&fit=crop",
                            LastName = "Coleman",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("448729e7-43f7-4025-aca0-d71aeda47e8e"),
                            FirstName = "Jacob",
                            ImageURL = "https://s.abcnews.com/images/GMA/221207_gma_batalon1_hpMain_16x9_1600.jpg",
                            LastName = "Batalon",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07fcb413-8124-4e86-8d1f-a14b904f20ce"),
                            FirstName = "Michael",
                            ImageURL = "https://deadline.com/wp-content/uploads/2022/12/Michael-Bay.jpg",
                            LastName = "Bay",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("8dbf2bbb-7f89-4c39-9fbe-4190a5eb414f"),
                            FirstName = "Travis",
                            ImageURL = "https://deadline.com/wp-content/uploads/2020/01/shutterstock_editorial_10540803ev-e1580315841789.jpg",
                            LastName = "Knight",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("b8e683e4-eb4c-4aed-b3f7-1781f0f02c48"),
                            FirstName = "Steven",
                            ImageURL = "https://images.bauerhosting.com/empire/2023/06/steven-caple-jr.jpg?format=jpg&quality=80&width=960&height=540&ratio=16-9&resize=aspectfill",
                            LastName = "Caple Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("5132d3b6-fcf6-46ad-8f1b-7d553a472cf5"),
                            FirstName = "Jonathan",
                            ImageURL = "https://lumiere-a.akamaihd.net/v1/images/jon-favreau-hollywood-walk-of-fame-feature_464fe901.jpeg",
                            LastName = "Favreau",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fdefeec2-e3c2-433a-95ed-20c0a537f869"),
                            FirstName = "Jonathan",
                            ImageURL = "https://variety.com/wp-content/uploads/2022/04/Jon-Watts.jpg?w=1000",
                            LastName = "Watts",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b09a9747-5aba-46d2-8485-0e6951ab2eed"),
                            ImageURL = "https://img.freepik.com/free-photo/dictatorship-oppression-collage-concept_23-2149711441.jpg?w=996&t=st=1690645532~exp=1690646132~hmac=8e2d8c552cc98f1c2997af989980015a2b12a42fc5a7a84d167908aeda7c1f4d",
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("eef14cd1-7d77-4529-abdd-8c6e714be63d"),
                            ImageURL = "https://img.freepik.com/free-photo/people-s-emotions-cinema_155003-15059.jpg?w=996&t=st=1690644907~exp=1690645507~hmac=50e982108c2b8eadb7aa524e605a844fc8e1e19a9bfefbceb26495a39c41a4df",
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("9cd185f9-89f6-4cf1-b4d4-3e122bd20410"),
                            ImageURL = "https://img.freepik.com/free-photo/sad-lady-silk-outfit-posing-with-clapperboard-black-background-portrait-blonde-woman-red-dress-crying-isolated-backdrop_197531-29087.jpg?w=996&t=st=1690645002~exp=1690645602~hmac=10686356bde52377f1f022d27be1880fc928717d6d10146a9d82037b199a7a4f",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("6f488002-65e0-4554-8e3f-ac27b925e007"),
                            ImageURL = "https://img.freepik.com/free-photo/nighttime-nature-landscape-galaxy-mountain-water-star-beauty-generative-ai_188544-9736.jpg?w=1060&t=st=1690645132~exp=1690645732~hmac=033aa5f68de6924948adc05915d4f13d141706979dfa063f5bbd38d11c46f2a4",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("11784f7f-23fb-4051-a9cc-13cb3ddee9b8"),
                            ImageURL = "https://img.freepik.com/free-photo/small-skeleton-with-popcorn-tv_23-2147685634.jpg?w=996&t=st=1690645054~exp=1690645654~hmac=6445730adc22805a60813820dd00cc71499fd873cee682d3da6d3a5d19e05384",
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("48ea5fcb-88b3-4067-9f02-eacae8ddda61"),
                            ImageURL = "https://img.freepik.com/free-photo/back-view-man-planning-hacker-attack-dark-room-man-writing-wall-with-stickers-photographs-red-threads-planning-conspiracy-hacking-concept_74855-24330.jpg?w=996&t=st=1690645169~exp=1690645769~hmac=bb30a31205ec715b8384815bcb7b2b46222b8dedb91e4d0040d7aa30fb9d967f",
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("9b64ca3e-2ddd-4242-862f-29cb5da93cb4"),
                            ImageURL = "https://img.freepik.com/free-photo/silhouettes-wedding-couple-standing-evening-field_1304-5463.jpg?w=1060&t=st=1690645187~exp=1690645787~hmac=40a97b3583ac55b8ef09542220c23c7b1f8b0ea4c059daca4f0455702e9e6464",
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("6a60182f-ac6f-49ca-a9a6-aa29e4535416"),
                            ImageURL = "https://img.freepik.com/free-photo/silhouette-scary-zombie-with-dramatic-background_9083-8119.jpg?w=996&t=st=1690645242~exp=1690645842~hmac=3386ca0baa8ae3d240c321b480c46a262886ea6b850f5bfadd42af4ef54a2bdc",
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("72af5e85-177a-4abc-94ae-173e654d9f0e"),
                            ImageURL = "https://img.freepik.com/free-photo/truth-concept-arrangement-crime-scene_23-2149051305.jpg?w=996&t=st=1690645266~exp=1690645866~hmac=2f1dc50b5128517c9d54fb98b7826ec6e5547fe1049f8a402264ecddbaab9c8d",
                            Name = "Crime"
                        },
                        new
                        {
                            Id = new Guid("34047d30-8e6a-44e2-8ea3-ea8c766449d4"),
                            ImageURL = "https://img.freepik.com/free-photo/memory-loss-dementia-alzheimer-concept-created-with-generative-ai-technology_185193-110044.jpg?w=1060&t=st=1690645384~exp=1690645984~hmac=166a934cabdbc26d34996172eb3b0c404a6ceeb9159f36f15becbf8ca3969194",
                            Name = "Psychological"
                        },
                        new
                        {
                            Id = new Guid("f9bb0da8-c98e-4ade-8b32-f12bfaf534d4"),
                            ImageURL = "https://img.freepik.com/free-photo/cowboy-background-with-hat_52683-87191.jpg?w=360&t=st=1690645411~exp=1690646011~hmac=e5b40854dc486b4d7c64ed41e7b3eda36131e28c6f73382e7e3834d9e08354e8",
                            Name = "Western"
                        },
                        new
                        {
                            Id = new Guid("0feb529d-abeb-4052-98c2-5a2c11e9a7c3"),
                            ImageURL = "https://img.freepik.com/free-photo/cruel-war-scenes-digital-painting_456031-162.jpg?w=1380&t=st=1690645434~exp=1690646034~hmac=7f69427ebf3e600fb904d17b3bb3877d1a172ba7194cc4549977ccb61a43dcce",
                            Name = "War and military"
                        },
                        new
                        {
                            Id = new Guid("81fa16ff-962d-4219-a072-b8d1611185dc"),
                            ImageURL = "https://www.freepik.com/free-photo/muay-thai-thai-boxing-fighters_27883560.htm#query=fight%20film&position=9&from_view=search&track=ais",
                            Name = "Martial arts"
                        },
                        new
                        {
                            Id = new Guid("3c97ac09-5246-4496-8716-6984159fb171"),
                            ImageURL = "https://img.freepik.com/free-photo/painting-spaceship-being-lifted-up-by-galaxy_123827-23492.jpg?w=996&t=st=1690645621~exp=1690646221~hmac=e753bce5031804d263d083eb6d69f24ca79a53bf2de5cf5b1c0f126c13ea5790",
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("b08f8244-c7a2-4da2-9a89-d2aa40e71481"),
                            ImageURL = "https://img.freepik.com/free-photo/beautiful-shot-famous-roman-colosseum-amphitheater-breathtaking-sky-sunrise_181624-6998.jpg?w=900&t=st=1690645693~exp=1690646293~hmac=fadd42117ddd0daffd2e3b564aed50209b061edd15ce59d5f25ff711523a3db8",
                            Name = "Historical"
                        },
                        new
                        {
                            Id = new Guid("9e9791d2-4fa0-4491-a4ce-f20a63764e95"),
                            ImageURL = "https://img.freepik.com/free-photo/doomsday-scene-catastrophe-digital-illustration_456031-51.jpg?w=1380&t=st=1690645557~exp=1690646157~hmac=d0399ce74558d886a183733b8b081a544752c4b62b9716931f35d7341fd0c0c2",
                            Name = "Supernatural"
                        },
                        new
                        {
                            Id = new Guid("12c7e3a9-4a53-468e-bd61-38ab0e82ddb3"),
                            ImageURL = "https://img.freepik.com/free-photo/soccer-ball-white-line-stadium_1150-5285.jpg?w=996&t=st=1690645585~exp=1690646185~hmac=6116b95c4db3685731491d73b2eadef22128b617e906bbf22b1ef2f51b21bf2a",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("76850183-f027-4672-a5ce-8f4cfc9ac119"),
                            ImageURL = "https://img.freepik.com/free-photo/photographer-hand-holding-camera-standing-viewpoint-clouds-panorama-viewpoint-sunrise_335224-1320.jpg?w=996&t=st=1690645725~exp=1690646325~hmac=fe9c6f2d727ddfadff01addb7c94e2cccc477fed176a493c19a4c4875f079963",
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.IdentityUserMovie", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "CollectorId");

                    b.HasIndex("CollectorId");

                    b.ToTable("IdentityUsersMovies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<decimal>("Rating")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieActor", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MoviesActors");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesGenres");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieWriter", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WriterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "WriterId");

                    b.HasIndex("WriterId");

                    b.ToTable("MoviesWriters");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Writer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Writers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4556e232-df66-446c-8f8c-bdd1aa44592e"),
                            FirstName = "Roberto",
                            ImageURL = "https://variety.com/wp-content/uploads/2014/05/roberto-orci.jpg",
                            LastName = "Orci",
                            Nationality = "Mexican-American"
                        },
                        new
                        {
                            Id = new Guid("15749759-d51c-43e5-8d83-faa74ad20889"),
                            FirstName = "Alex",
                            ImageURL = "https://www.startrek.com/sites/default/files/styles/content_full/public/images/2019-07/b58f7d184743106a8a66028b7a28937c.jpg?itok=WAC4Y1l3",
                            LastName = "Kurtzman",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fd7c557a-a1e3-41f3-af8e-40ce4aa0a411"),
                            FirstName = "John",
                            ImageURL = "https://bioelectronics.northwestern.edu/images/people/members/rogers-john.jpg",
                            LastName = "Rogers",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("be5410fc-ad0a-4cb8-a16c-7daf60eb6a39"),
                            FirstName = "Ehren",
                            ImageURL = "https://m.media-amazon.com/images/M/MV5BMTc4Nzk4NTg2Nl5BMl5BanBnXkFtZTYwNTQ4OTU3._V1_.jpg",
                            LastName = "Kruger",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("8f3aaa87-a5ed-42bc-bd02-da83a543cfd9"),
                            FirstName = "Ken",
                            ImageURL = "https://images.mubicdn.net/images/cast_member/16761/cache-259975-1506415601/image-w856.jpg?size=800x",
                            LastName = "Nolan",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("054b431b-2fa0-43d4-bb55-c5372b27e6e7"),
                            FirstName = "Art",
                            ImageURL = "https://scriptmag.com/.image/t_share/MTg3Nzg2ODU1Nzc1NzQxMjcz/artmarcum.jpg",
                            LastName = "Marcum",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("f76bf173-97c2-4b0b-88e8-ec6b18fe3d26"),
                            FirstName = "Matt",
                            ImageURL = "https://ausdrain.com/wp-content/uploads/2018/03/Matt-ausdain-tile-1-e1607646121344-576x380.jpg",
                            LastName = "Holloway",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("81cb6c6c-e0cf-4c09-b72a-203227148b26"),
                            FirstName = "Christina",
                            ImageURL = "https://i0.wp.com/geeksofcolor.co/wp-content/uploads/2018/04/1-ex0dre0izo58_qehqtglbw.jpg?resize=800%2C469&ssl=1",
                            LastName = "Hodson",
                            Nationality = "British"
                        },
                        new
                        {
                            Id = new Guid("d5f2a46e-a3f0-4058-b631-36aae16bb1ef"),
                            FirstName = "Mark",
                            ImageURL = "https://static.wikia.nocookie.net/marvelcinematicuniverse/images/4/47/Mark_Fergus.jpg/revision/latest?cb=20120922000533",
                            LastName = "Fergus",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("d79a88ec-20cd-4d97-8943-0afdd6ddab5e"),
                            FirstName = "Hawk",
                            ImageURL = "https://variety.com/wp-content/uploads/2013/09/hawk-ostby-mark-fergus.jpg?w=1000",
                            LastName = "Ostby",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("00929bfe-d91c-42ab-a00e-30853db4c2d4"),
                            FirstName = "Justin",
                            ImageURL = "https://media-cldnry.s-nbcnews.com/image/upload/rockcms/2023-05/justin-Theroux-Jennifer-Aniston-te-230501-5e6504.jpg",
                            LastName = "Theroux",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("3ac2ff72-1ab9-41d2-9e58-993fa4d19583"),
                            FirstName = "Chris",
                            ImageURL = "https://1.bp.blogspot.com/-Hef2MXW2WhM/W-Es5fvF8eI/AAAAAAAALUo/9AvYphdbpUU5XHAJaMmIXiiKdj-FsuDwwCLcBGAs/s1600/ChrisMc.jpeg",
                            LastName = "McKenna",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("2e1f12c1-e878-4a27-bc42-2dd87df329dc"),
                            FirstName = "Erik",
                            ImageURL = "https://static.wikia.nocookie.net/marvelcinematicuniverse/images/7/7a/Erik_Sommers.png/revision/latest?cb=20210927114539",
                            LastName = "Sommers",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("47f37c3a-9854-4521-bf2b-020849d95b5f"),
                            FirstName = "Jonathan",
                            ImageURL = "https://i.guim.co.uk/img/media/254c8463684b9022559adeffd4162424a52008d5/0_175_3456_2073/master/3456.jpg?width=1200&height=630&quality=85&auto=format&fit=crop&overlay-align=bottom%2Cleft&overlay-width=100p&overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&s=d9f4c5375c148042bf815c6f09fd1ae6",
                            LastName = "Goldstein",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("a1042920-81ce-4fe2-997b-911a35a1bd58"),
                            FirstName = "John",
                            ImageURL = "https://flxt.tmsimg.com/assets/189544_v9_bb.jpg",
                            LastName = "Daley",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("c8bf8b48-e17e-47ff-a6c1-e845fb46e3b9"),
                            FirstName = "Christopher",
                            ImageURL = "https://static.wikia.nocookie.net/marvelcinematicuniverse/images/c/c2/Christopher_Ford.jpg/revision/latest?cb=20210927095630",
                            LastName = "Ford",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("0098875b-1320-44ec-882f-93d98eb06167"),
                            FirstName = "Joby",
                            ImageURL = "https://www.comingsoon.net/wp-content/uploads/sites/3/2020/04/jobyharold.jpg?w=800",
                            LastName = "Harold",
                            Nationality = "English"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.IdentityUserMovie", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", "Collector")
                        .WithMany("IdentityUsersMovies")
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("IdentityUsersMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieActor", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Actor", "Actor")
                        .WithMany("MoviesActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieGenre", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Genre", "Genre")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieWriter", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesWriters")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Writer", "Writer")
                        .WithMany("MoviesWriters")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Actor", b =>
                {
                    b.Navigation("MoviesActors");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.AppUser", b =>
                {
                    b.Navigation("IdentityUsersMovies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Genre", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.Navigation("IdentityUsersMovies");

                    b.Navigation("MoviesActors");

                    b.Navigation("MoviesGenres");

                    b.Navigation("MoviesWriters");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Writer", b =>
                {
                    b.Navigation("MoviesWriters");
                });
#pragma warning restore 612, 618
        }
    }
}
