// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesWatchlist.Data;

#nullable disable

namespace MoviesWatchlist.Data.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    partial class MoviesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a145d6de-a56b-4212-948e-c91f3cd55739"),
                            FirstName = "Hugo",
                            LastName = "Weaving",
                            Nationality = "British"
                        },
                        new
                        {
                            Id = new Guid("23e767cf-efd1-4407-a560-a52fddae07ca"),
                            FirstName = "Shia",
                            LastName = "LaBeouf",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("3399ca51-6179-410b-88d9-a4bedcd24c96"),
                            FirstName = "Megan",
                            LastName = "Fox",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("0f9f5fba-7b14-495a-aac9-57c5a0f1617a"),
                            FirstName = "Tyrese",
                            LastName = "Gibson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("a25d4265-618e-4207-8109-0d53f89653bf"),
                            FirstName = "Joshua",
                            LastName = "Duhamel",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("aaff44cb-ae90-4fc5-a213-509103ee589d"),
                            FirstName = "John",
                            LastName = "Turturro",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("3876aa34-f85c-417e-8744-9a0b18c73f5d"),
                            FirstName = "Mark",
                            LastName = "Wahlberg",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("c6d8ec2a-c52b-424d-a054-10d55f1c508f"),
                            FirstName = "Stanley",
                            LastName = "Tucci",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fe0a8cbc-9e87-4257-8498-075e847e382a"),
                            FirstName = "Anthony",
                            LastName = "Hopkins",
                            Nationality = "Welsh"
                        },
                        new
                        {
                            Id = new Guid("102b6971-7278-471a-bee8-44976bc1616b"),
                            FirstName = "Hailee",
                            LastName = "Steinfeld",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("25a3f672-0ce0-4003-9583-e3d3654ad5da"),
                            FirstName = "John",
                            LastName = "Cena",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("989d0418-da25-474f-8d7d-0f6dfebf4263"),
                            FirstName = "John",
                            LastName = "Ortiz",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("2908138e-a1ef-489e-bde0-d805f1584e0e"),
                            FirstName = "Anthony",
                            LastName = "Ramos",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("4c900406-2962-4de1-a8c7-923b57dbe2f8"),
                            FirstName = "Dominique",
                            LastName = "Fishback",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("a018cb3b-e630-437e-ab04-2488adfb2671"),
                            FirstName = "Robert",
                            LastName = "Downey Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("6bb7a659-6a82-45b1-903d-b089d228e699"),
                            FirstName = "Terrence",
                            LastName = "Howard",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("be066a1b-08d2-4e7b-b6c8-ec4a157cffb4"),
                            FirstName = "Gwyneth",
                            LastName = "Paltrow",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("a76e3acb-eda2-44f8-8f0e-42c1fa2072cb"),
                            FirstName = "Scarlett",
                            LastName = "Johansson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("9677782d-0580-4590-87bb-dca5a7df1898"),
                            FirstName = "Samuel",
                            LastName = "Jackson",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("d7498ede-dc2b-4cd0-a987-a0818c0653ee"),
                            FirstName = "Tom",
                            LastName = "Holland",
                            Nationality = "English"
                        },
                        new
                        {
                            Id = new Guid("6e076de8-9235-4ab6-8f16-01e19f0b2d11"),
                            FirstName = "Michael",
                            LastName = "Keaton",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("857450bf-8ba2-4797-b83e-8253aac8a080"),
                            FirstName = "Zendaya",
                            LastName = "Coleman",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("09e9e00e-87b1-4ad5-a3f4-6656f4ef582f"),
                            FirstName = "Jacob",
                            LastName = "Batalon",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75712a98-bb11-4db1-92e2-acc7a477c325"),
                            FirstName = "Michael",
                            LastName = "Bay",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("c681c71b-638b-42bd-88a0-b3cd86525d4b"),
                            FirstName = "Travis",
                            LastName = "Knight",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("daa714f4-8da2-46a1-aaad-877b026865e5"),
                            FirstName = "Steven",
                            LastName = "Caple Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("3e88e0ab-1f41-4e29-a0a8-9187c65c969c"),
                            FirstName = "Jonathan",
                            LastName = "Favreau",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("c0c98a54-6d27-4235-9e4f-87471195036a"),
                            FirstName = "Jonathan",
                            LastName = "Watts",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2cbd8fa3-04b2-4046-bf79-a2e3139499b1"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("fc6067c6-093c-46ac-a31f-c9d4aeb61a15"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("2890ffb5-39c3-49c7-8ac2-d7c1596744ee"),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("7d691aa7-1bfb-48bf-b0d3-8d826a39165e"),
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("64508423-0ed3-4785-bfb2-6e21272d64a4"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("fd2c8902-5b6c-4b66-af01-8fc96d4c8379"),
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("bb47773a-700f-4be2-b0b4-25d7e646a248"),
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("0a06a66a-97c5-4ca8-ab0d-13eb9e190451"),
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("06c946ea-f6c1-4210-b6c0-4546b113d468"),
                            Name = "Crime"
                        },
                        new
                        {
                            Id = new Guid("cf449426-3a0b-4a2a-954e-0be7a26286d3"),
                            Name = "Psychological"
                        },
                        new
                        {
                            Id = new Guid("3e491a9f-6ce9-4d83-b2c3-f3a594cb8b41"),
                            Name = "Western"
                        },
                        new
                        {
                            Id = new Guid("991f5414-a73d-496e-8ad4-4dde92998825"),
                            Name = "War and military"
                        },
                        new
                        {
                            Id = new Guid("457aa818-518f-4f5d-9aa7-989793c552f7"),
                            Name = "Martial arts"
                        },
                        new
                        {
                            Id = new Guid("368f5f5b-2db5-4fe2-8d8e-acf599e7d0d7"),
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("b442dd64-5e1e-4feb-9846-152cb7a62571"),
                            Name = "Historical"
                        },
                        new
                        {
                            Id = new Guid("2608eadc-f2e4-47e1-a97e-8cbb7b165f0a"),
                            Name = "Supernatural"
                        },
                        new
                        {
                            Id = new Guid("ec6947a1-331a-46fb-bf41-5ad7ea727d55"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("c79dedde-fb6c-4678-8f2e-5f2be69998d8"),
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.IdentityUserMovie", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "CollectorId");

                    b.HasIndex("CollectorId");

                    b.ToTable("IdentityUsersMovies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<decimal>("Rating")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieActor", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MoviesActors");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesGenres");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieWriter", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WriterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "WriterId");

                    b.HasIndex("WriterId");

                    b.ToTable("MoviesWriters");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Writer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Writers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d6b1565-bc84-4f2c-a34e-76c8e772e122"),
                            FirstName = "Roberto",
                            LastName = "Orci",
                            Nationality = "Mexican-American"
                        },
                        new
                        {
                            Id = new Guid("f077230e-6c39-4c69-b7d5-e2fca1dc4910"),
                            FirstName = "Alex",
                            LastName = "Kurtzman",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("6dea9a15-fa05-4036-a679-85865dfba25d"),
                            FirstName = "John",
                            LastName = "Rogers",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("37ceddb7-e7f3-4880-ae1b-96bae0af264c"),
                            FirstName = "Ehren",
                            LastName = "Kruger",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("efe82100-f4e7-465e-b77b-a40fa1858750"),
                            FirstName = "Ken",
                            LastName = "Nolan",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("ebb5e25c-672e-4bcb-9fe4-a05c969571b5"),
                            FirstName = "Art",
                            LastName = "Marcum",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fbf45c67-ebb6-4f25-81ed-c3464a5717b8"),
                            FirstName = "Matt",
                            LastName = "Holloway",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("8249bb1f-c4e1-4c57-ae8b-c4c449cb9244"),
                            FirstName = "Christina",
                            LastName = "Hodson",
                            Nationality = "British"
                        },
                        new
                        {
                            Id = new Guid("b0d1adb5-52c1-477e-b7fc-29db424bafdb"),
                            FirstName = "Mark",
                            LastName = "Fergus",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("4cb154ae-d288-48d9-a7a3-92201d556bb5"),
                            FirstName = "Hawk",
                            LastName = "Ostby",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("4dfb06c4-970f-4b9f-978a-10c86ad7d66b"),
                            FirstName = "Justin",
                            LastName = "Theroux",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("d12b795a-c090-4bf5-90a3-9c7400f42b2e"),
                            FirstName = "Chris",
                            LastName = "McKenna",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("5ea8502b-87b8-43c6-b5dc-0eb60f1a13ac"),
                            FirstName = "Erik",
                            LastName = "Sommers",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("fa95a713-7d6d-47d0-b401-d9d3f4dbce3d"),
                            FirstName = "Jonathan",
                            LastName = "Goldstein",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("9f4ccfd8-c068-426c-81b3-a4f03b163f8c"),
                            FirstName = "John",
                            LastName = "Daley",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("23de6343-2f1e-4cdf-8c5e-e1d533d3ce81"),
                            FirstName = "Christopher",
                            LastName = "Ford",
                            Nationality = "American"
                        },
                        new
                        {
                            Id = new Guid("da41c8ec-a920-4739-a713-3e0fba894412"),
                            FirstName = "Joby",
                            LastName = "Harold",
                            Nationality = "English"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.IdentityUserMovie", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.AppUser", "Collector")
                        .WithMany("IdentityUsersMovies")
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("IdentityUsersMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieActor", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Actor", "Actor")
                        .WithMany("MoviesActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieGenre", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Genre", "Genre")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.MovieWriter", b =>
                {
                    b.HasOne("MoviesWatchlist.Data.Models.Movie", "Movie")
                        .WithMany("MoviesWriters")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesWatchlist.Data.Models.Writer", "Writer")
                        .WithMany("MoviesWriters")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Actor", b =>
                {
                    b.Navigation("MoviesActors");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.AppUser", b =>
                {
                    b.Navigation("IdentityUsersMovies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Genre", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Movie", b =>
                {
                    b.Navigation("IdentityUsersMovies");

                    b.Navigation("MoviesActors");

                    b.Navigation("MoviesGenres");

                    b.Navigation("MoviesWriters");
                });

            modelBuilder.Entity("MoviesWatchlist.Data.Models.Writer", b =>
                {
                    b.Navigation("MoviesWriters");
                });
#pragma warning restore 612, 618
        }
    }
}
